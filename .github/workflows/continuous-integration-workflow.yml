name: Continuous Integration Workflow

on: [push]

env:
  CACHE_VERSION: 9c3bfa173ea0aca1f9939f8896feb4a5

jobs:
  core:
    strategy:
      matrix:
        cmd: ['go_core_tests', 'go_core_race_tests']
    name: Core Tests
    runs-on: self-hosted
    container: smartcontract/builder:1.0.34
    env:
      DATABASE_URL: postgres://chainlink@postgres:5432/chainlink_test?sslmode=disable
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_HOST_AUTH_METHOD: trust
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Set up Postgres user
        uses: docker://postgres
        with:
          args: psql -v ON_ERROR_STOP=1 --username postgres -h postgres -c "CREATE USER chainlink NOSUPERUSER CREATEDB;"
      - name: Cache Yarn dependencies
        uses: actions/cache@v1
        with:
          path: /usr/local/share/.cache/yarn
          key: yarn-${{ env.CACHE_VERSION }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-${{ env.CACHE_VERSION }}
      - name: Install Yarn dependencies
        run: make yarndep
      - name: Cache Go vendor packages
        uses: actions/cache@v1
        with:
          path: /go/pkg/mod
          key: go-mod-${{ env.CACHE_VERSION }}-${{ hashFiles('go.sum') }}
          restore-keys: |
            go-mod-${{ env.CACHE_VERSION }}
      - name: Download Go vendor packages
        run: go mod download
      - name: Set up Yarn for Contracts
        run: yarn setup:contracts
      - name: Setup DB
        run: go run ./core local db preparetest
      - name: Run tests
        run: ./tools/bin/${{ matrix.cmd }}

  rust:
    name: Rust
    runs-on: ubuntu-latest
    container:
      image: smartcontract/builder:1.0.34
      env:
        CARGO_HOME: /root/.cargo
        RUSTUP_HOME: /root/.rustup
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Run Rust test
        run: ./tools/ci/rust_test

  integration:
    name: Integration tests
    runs-on: self-hosted
    strategy:
      matrix:
        test: ['test', 'test:ts']
        geth: [true, false]
        explorer: ['latest'] # TODO: add in 'develop' once image is published
    env:
      GETH_MODE: ${{ matrix.geth }}
      CI: true
      CHAINLINK_DB_NAME: postgres
      EXPLORER_DOCKER_TAG: ${{ matrix.explorer }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Run tests
        run: cd ./tools/docker && timeout --foreground 1200s ./compose ${{ matrix.test }}
      - name: Store logs artifacts
        uses: actions/upload-artifact@v1
        with:
          name: logs
          path: ./tools/docker/logs

  solidity:
    name: Solidity
    runs-on: self-hosted
    container: smartcontract/builder:1.0.34
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Cache Yarn dependencies
        uses: actions/cache@v1
        with:
          path: /usr/local/share/.cache/yarn
          key: yarn-${{ env.CACHE_VERSION }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-${{ env.CACHE_VERSION }}
      - name: Install Yarn dependencies
        run: make yarndep
      - name: Run tests
        run: ./tools/ci/solidity_test
      - name: Store logs artifacts
        uses: actions/upload-artifact@v1
        with:
          name: logs
          path: ./integration/logs

  operator-ui:
    name: Operator UI
    runs-on: ubuntu-latest
    container: smartcontract/builder:1.0.34
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Cache Yarn dependencies
        uses: actions/cache@v1
        with:
          path: /usr/local/share/.cache/yarn
          key: yarn-${{ env.CACHE_VERSION }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-${{ env.CACHE_VERSION }}
      - name: Install Yarn dependencies
        run: make yarndep
      - name: Run Operator UI tests
        run: ./tools/ci/operator_ui_test
      - name: Store logs artifacts
        uses: actions/upload-artifact@v1
        with:
          name: logs
          path: ./integration/logs

  reportcoverage:
    name: Report test coverage
    runs-on: ubuntu-latest
    container: smartcontract/builder:1.0.34
    needs: [core, solidity, operator-ui, rust]
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Init GCloud
        run: ./tools/ci/init_gcloud
      - name: Run coverage report
        run: ./tools/ci/report_coverage

  check_if_rebase_needed:
    name: Check if rebase needed
    runs-on: ubuntu-latest
    container: alpine/git
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
        with:
          # Default fetch depth of 1 prevents us from knowing if HEAD of develop
          # branch is present in current branch
          fetch-depth: 1000
      - name: Check if rebase is needed
        run: tools/bin/check_if_rebase_needed

  lint:
    name: Yarn lint
    runs-on: ubuntu-latest
    container: smartcontract/builder:1.0.34
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Cache Yarn dependencies
        uses: actions/cache@v1
        with:
          path: /usr/local/share/.cache/yarn
          key: yarn-${{ env.CACHE_VERSION }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-${{ env.CACHE_VERSION }}
      - name: Install Yarn dependencies
        run: make yarndep
      - name: Run Yarn lint
        run: yarn lint

  prepublish_npm:
    name: Prepublish NPM
    runs-on: self-hosted
    container: smartcontract/builder:1.0.34
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Cache Yarn dependencies
        uses: actions/cache@v1
        with:
          path: /usr/local/share/.cache/yarn
          key: yarn-${{ env.CACHE_VERSION }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-${{ env.CACHE_VERSION }}
      - name: Install Yarn dependencies
        run: make yarndep
      - name: Run prepublish NPM test
        run: ./tools/ci/prepublish_npm_test
