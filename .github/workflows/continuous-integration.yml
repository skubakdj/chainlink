name: Continuous Integration

on: [push]

env:
  CACHE_VERSION: 9c3bfa173ea0aca1f9939f8896feb4a5

jobs:
  styleguide:
    name: Styleguide
    runs-on: ubuntu-latest
    container: smartcontract/builder:1.0.34
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Cache Yarn dependencies
        uses: actions/cache@v1
        with:
          path: /usr/local/share/.cache/yarn
          key: yarn-${{ env.CACHE_VERSION }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-${{ env.CACHE_VERSION }}
      - name: Install Yarn dependencies
        run: yarn install --frozen-lockfile
      - name: Run styleguide tests
        run: yarn workspace @chainlink/styleguide test

  json-api-client:
    name: JSON API client
    runs-on: ubuntu-latest
    container: smartcontract/builder:1.0.34
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Cache Yarn dependencies
        uses: actions/cache@v1
        with:
          path: /usr/local/share/.cache/yarn
          key: yarn-${{ env.CACHE_VERSION }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-${{ env.CACHE_VERSION }}
      - name: Install Yarn dependencies
        run: yarn install --frozen-lockfile
      - name: Run JSON API client tests
        run: yarn workspace @chainlink/json-api-client test

  explorer:
    name: Explorer
    runs-on: ubuntu-latest
    container: smartcontract/builder:1.0.34
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: explorer_test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      TYPEORM_NAME: ci-gh
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Cache Yarn dependencies
        uses: actions/cache@v1
        with:
          path: /usr/local/share/.cache/yarn
          key: yarn-${{ env.CACHE_VERSION }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-${{ env.CACHE_VERSION }}
      - name: Install Yarn dependencies
        run: yarn install --frozen-lockfile
      - name: Run setup
        run: yarn workspace @chainlink/explorer setup
      - name: Run Yarn migrations
        run: yarn workspace @chainlink/explorer test:migration:run
      - name: Run Server Tests
        run: yarn workspace @chainlink/explorer test:ci
      - name: Run Client dependency setup
        run: yarn workspace @chainlink/explorer-client setup
      - name: Run Client tests
        run: yarn workspace @chainlink/explorer-client test:ci
      - name: Store logs artifacts
        uses: actions/upload-artifact@v1
        with:
          name: logs
          path: ./integration/logs

  feeds:
    name: Feeds
    runs-on: ubuntu-latest
    container: smartcontract/builder:1.0.34
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Cache Yarn dependencies
        uses: actions/cache@v1
        with:
          path: /usr/local/share/.cache/yarn
          key: yarn-${{ env.CACHE_VERSION }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-${{ env.CACHE_VERSION }}
      - name: Install Yarn dependencies
        run: yarn install --frozen-lockfile
      - name: Run Feeds setup
        run: yarn workspace @chainlink/feeds setup
      - name: Run Feeds tests
        run: yarn workspace @chainlink/feeds test
        env:
          CI: true

  # NOTE: will likely want to keep the following, but some setup is required

  # reportcoverage:
  #   name: Report test coverage
  #   runs-on: ubuntu-latest
  #   container: smartcontract/builder:1.0.34
  #   needs: [explorer]
  #   steps:
  #     - name: Checkout the repo
  #       uses: actions/checkout@v2
  #     - name: Init GCloud
  #       run: ./tools/ci/init_gcloud
  #     - name: Run coverage report
  #       run: ./tools/ci/report_coverage

  check_if_rebase_needed:
    name: Check if rebase needed
    runs-on: ubuntu-latest
    container: alpine/git
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
        with:
          # Default fetch depth of 1 prevents us from knowing if HEAD of develop
          # branch is present in current branch
          fetch-depth: 1000
      - name: Check if rebase is needed
        run: tools/bin/check_if_rebase_needed

  lint:
    name: Yarn lint
    runs-on: ubuntu-latest
    container: smartcontract/builder:1.0.34
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Cache Yarn dependencies
        uses: actions/cache@v1
        with:
          path: /usr/local/share/.cache/yarn
          key: yarn-${{ env.CACHE_VERSION }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            yarn-${{ env.CACHE_VERSION }}
      - name: Install Yarn dependencies
        run: yarn install --frozen-lockfile
      - name: Run Yarn lint
        run: yarn lint

  # NOTE: can likely remove the following. was ran before publishing contracts to NPM

  # prepublish_npm:
  #   name: Prepublish NPM
  #   runs-on: self-hosted
  #   container: smartcontract/builder:1.0.34
  #   steps:
  #     - name: Checkout the repo
  #       uses: actions/checkout@v2
  #     - name: Cache Yarn dependencies
  #       uses: actions/cache@v1
  #       with:
  #         path: /usr/local/share/.cache/yarn
  #         key: yarn-${{ env.CACHE_VERSION }}-${{ hashFiles('yarn.lock') }}
  #         restore-keys: |
  #           yarn-${{ env.CACHE_VERSION }}
  #     - name: Install Yarn dependencies
  #       run: make yarndep
  #     - name: Run prepublish NPM test
  #       run: ./tools/ci/prepublish_npm_test

  repo-dispatch-build-publish-explorer:
    name: Kick off build-publish-explorer workflow
    runs-on: ubuntu-latest
    needs:
      - styleguide
      - json-api-client
      - explorer
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2
      - name: Extract branch and tag
        id: extract
        run: tools/ci/gha_output_branch_tag

      - name: Log for troubleshoot
        run: |
          echo GITHUB_REF: $GITHUB_REF
          echo Extracted branch: ${{steps.extract.outputs.branch}}
          echo Extracted tag: ${{steps.extract.outputs.tag}}
      # - name: Docker login
      #   run: echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USER" --password-stdin
      # - name: Docker build
      #   run: docker build -f explorer/Dockerfile -t smartcontract/explorer:gha .
      # - name: Docker push, if applicable
      #   run: tools/ci/push_explorer "${steps.extract_branch_and_tag.branch}" "${steps.extract_branch_and_tag.tag}"
  # build-publish-explorer:
  #   machine:
  #     image: circleci/classic:201808-01
  #     docker_layer_caching: true
  #   steps:
  #     - checkout
  #     - run:
  #         name: Docker login
  #         command: |
  #     - run:
  #         name: Docker build
  #         command:
  #     - run:
  #         name: Docker push, if applicable
  #         command: |
  #
  #
  #
  #
  # repo-dispatch-build-publish-explorer:
  #   name: Kick off build-publish-explorer workflow
  #   runs-on: ubuntu-latest
  #   needs:
  #     # - styleguide
  #     - json-api-client
  #     # - explorer
  #   steps:
  #     - name: Issue repository dispatch
  #       # Pin to v1.0.0
  #       uses: peter-evans/repository-dispatch@0ae1c4b014bff102f1063cd67a53fc4a91311d1b
  #       with:
  #         token: ${{ secrets.REPO_ACCESS_TOKEN }}
  #         event-type: build-publish-explorer
